{"version":3,"sources":["api.ts","types/FilterStatus.ts","contexts/TodoProvider.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterStatus","TodosContext","React","createContext","todos","filterOptions","status","All","query","selectedTodo","filterByQuery","_query","selectTodo","_selectedTodo","filterByStatus","_status","reducer","state","action","type","TodosProvider","children","useReducer","dispatch","useEffect","value","useMemo","Provider","TodoItem","todo","useContext","onTodoSelect","completed","title","className","id","cn","onClick","TodoList","memo","map","TodoFilter","onChange","event","target","Active","Completed","placeholder","style","pointerEvents","Loader","TodoModal","useState","todoOwner","setTodoOwner","todoId","userId","href","email","name","App","filteredTodos","filter","normalizedQuery","trim","toLowerCase","includes","filterTodos","length","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a02b6d6c.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterStatus {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React, {\n  useEffect, useMemo, useReducer,\n} from 'react';\nimport { Todo } from '../types/Todo';\nimport { FilterOptions } from '../types/FilterOptions';\nimport { getTodos } from '../api';\nimport { FilterStatus } from '../types/FilterStatus';\n\ninterface State {\n  todos: Todo[],\n  filterOptions: FilterOptions,\n  selectedTodo: Todo,\n}\n\ninterface Props {\n  children: React.ReactNode,\n}\n\ntype Action = {\n  type: 'selectTodo',\n  selectedTodo: Todo,\n} | {\n  type: 'filterBy',\n  filterOptions: FilterOptions,\n} | {\n  type: 'setTodos'\n  todos: Todo[],\n};\n\nexport const TodosContext = React.createContext({\n  todos: [] as Todo[],\n  filterOptions: {\n    status: FilterStatus.All,\n    query: '',\n  } as FilterOptions,\n  selectedTodo: {} as Todo,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  filterByQuery: (_query: string) => { },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  selectTodo: (_selectedTodo: Todo) => { },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  filterByStatus: (_status: FilterStatus) => { },\n});\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'selectTodo':\n      return {\n        ...state,\n        selectedTodo: action.selectedTodo,\n      };\n    case 'filterBy':\n      return {\n        ...state,\n        filterOptions: action.filterOptions,\n      };\n    case 'setTodos':\n      return {\n        ...state,\n        todos: action.todos,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    todos: [] as Todo[],\n    filterOptions: {\n      query: '',\n      status: FilterStatus.All,\n    } as FilterOptions,\n    selectedTodo: null as unknown as Todo,\n  });\n\n  useEffect(() => {\n    getTodos().then((todos) => {\n      dispatch({\n        type: 'setTodos',\n        todos,\n      });\n    });\n  }, []);\n\n  const value = useMemo(() => ({\n    todos: state.todos,\n    filterOptions: state.filterOptions,\n    selectedTodo: state.selectedTodo,\n\n    filterByQuery: (query: string) => dispatch({\n      type: 'filterBy',\n      filterOptions: {\n        ...state.filterOptions,\n        query,\n      },\n    }),\n    filterByStatus: (status: FilterStatus) => dispatch({\n      type: 'filterBy',\n      filterOptions: {\n        ...state.filterOptions,\n        status,\n      },\n    }),\n    selectTodo: (selectedTodo: Todo) => dispatch({\n      type: 'selectTodo',\n      selectedTodo,\n    }),\n  }), [state]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../../contexts/TodoProvider';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { selectTodo: onTodoSelect, selectedTodo } = useContext(TodosContext);\n  const { completed, title } = todo;\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">\n        {todo.id}\n      </td>\n\n      <td className=\"is-vcentered\">\n        {completed\n          && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n      </td>\n\n      <td className=\"is-vcentered\">\n        <p className={cn({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          onClick={() => onTodoSelect(todo)}\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye-slash': selectedTodo && selectedTodo.id === todo.id,\n              'fa-eye': !selectedTodo || selectedTodo.id !== todo.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({ todos }) => (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))}\n      </tbody>\n    </table>\n  ),\n);\n","import { useContext } from 'react';\nimport { TodosContext } from '../../contexts/TodoProvider';\nimport { FilterStatus } from '../../types/FilterStatus';\n\nexport const TodoFilter = () => {\n  const {\n    filterOptions: { query, status },\n    filterByQuery,\n    filterByStatus,\n  } = useContext(TodosContext);\n\n  const onFilterStatusChanged = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    if (event.target.value !== status) {\n      filterByStatus(event.target.value as FilterStatus);\n    }\n  };\n\n  const onQueryChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value !== query) {\n      filterByQuery(event.target.value);\n    }\n  };\n\n  const handleResetQueryButtonPressed = () => {\n    filterByQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={onFilterStatusChanged}>\n            <option value={FilterStatus.All}>All</option>\n            <option value={FilterStatus.Active}>Active</option>\n            <option value={FilterStatus.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          onChange={onQueryChanged}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                onClick={handleResetQueryButtonPressed}\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n              />\n            </span>\n          )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { TodosContext } from '../../contexts/TodoProvider';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoModal: React.FC = () => {\n  const { selectedTodo, selectTodo } = useContext(TodosContext);\n  const [todoOwner, setTodoOwner] = useState<User | null>(null);\n  const { title, completed, id: todoId } = selectedTodo;\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setTodoOwner);\n  }, []);\n\n  const handleModalClosed = () => {\n    selectTodo(null as unknown as Todo);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!todoOwner ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={handleModalClosed}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${todoOwner.email}`}>\n                {todoOwner.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodosContext } from './contexts/TodoProvider';\nimport { FilterOptions } from './types/FilterOptions';\nimport { FilterStatus } from './types/FilterStatus';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nfunction filterTodos(todos: Todo[], { query, status }: FilterOptions) {\n  let filteredTodos = [];\n\n  switch (status) {\n    case FilterStatus.Active:\n      filteredTodos = todos.filter(({ completed }) => !completed);\n      break;\n    case FilterStatus.Completed:\n      filteredTodos = todos.filter(({ completed }) => completed);\n      break;\n    default:\n      filteredTodos = [...todos];\n      break;\n  }\n\n  if (query) {\n    const normalizedQuery = query.trim().toLowerCase();\n\n    filteredTodos = filteredTodos\n      .filter(({ title }) => title.toLowerCase().includes(normalizedQuery));\n  }\n\n  return filteredTodos;\n}\n\nexport const App: React.FC = () => {\n  const {\n    todos,\n    filterOptions: { query, status },\n    selectedTodo,\n  } = useContext(TodosContext);\n  const filteredTodos = useMemo(\n    () => filterTodos(todos, { query, status }),\n    [todos, query, status],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? <TodoList todos={filteredTodos} />\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (<TodoModal />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './contexts/TodoProvider';\n\nconst Root = () => (\n  <TodosProvider>\n    <App />\n  </TodosProvider>\n);\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}